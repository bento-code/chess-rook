{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/pabli/Documents/Bootcamp/chess-tower/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { LocalUser } from '../models/local-user';\nimport { User } from '../models/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.url = \"http://localhost:3000/user\";\n  }\n\n  getUser(username, fullUser) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(\"getting user...\");\n      let user = new User();\n      yield _this.http.get(_this.url + \"?username=\" + username).subscribe({\n        next: data => {\n          if (!data.failed) {\n            if (!fullUser) {\n              let recievedUser = data.user;\n              console.log(data);\n              user.username = recievedUser.username;\n              user.rating.bulletActualRating = recievedUser.bulletActualRating;\n              user.rating.bulletMaxRating = recievedUser.bulletMaxRating;\n              user.rating.blitzActualRating = recievedUser.blitzActualRating;\n              user.rating.blitzMaxRating = recievedUser.blitzMaxRating;\n              user.rating.rapidActualRating = recievedUser.rapidActualRating;\n              user.rating.rapidMaxRating = recievedUser.rapidMaxRating;\n            } else {\n              user = new LocalUser();\n              let recievedUser = data.user;\n              console.log(data);\n              user.username = recievedUser.username;\n              user.email = recievedUser.email;\n              user.rating.bulletActualRating = recievedUser.bulletActualRating;\n              user.rating.bulletMaxRating = recievedUser.bulletMaxRating;\n              user.rating.blitzActualRating = recievedUser.blitzActualRating;\n              user.rating.blitzMaxRating = recievedUser.blitzMaxRating;\n              user.rating.rapidActualRating = recievedUser.rapidActualRating;\n              user.rating.rapidMaxRating = recievedUser.rapidMaxRating;\n            }\n          }\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n      });\n      return user;\n    })();\n  }\n\n}\n\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/pabli/Documents/Bootcamp/chess-tower/src/app/shared/user.service.ts"],"names":["LocalUser","User","i0","i1","UserService","constructor","http","url","getUser","username","fullUser","console","log","user","get","subscribe","next","data","failed","recievedUser","rating","bulletActualRating","bulletMaxRating","blitzActualRating","blitzMaxRating","rapidActualRating","rapidMaxRating","email","error","ɵfac","UserService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { LocalUser } from '../models/local-user';\r\nimport { User } from '../models/user';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class UserService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.url = \"http://localhost:3000/user\";\r\n    }\r\n    async getUser(username, fullUser) {\r\n        console.log(\"getting user...\");\r\n        let user = new User();\r\n        await this.http.get(this.url + \"?username=\" + username).subscribe({\r\n            next: (data) => {\r\n                if (!data.failed) {\r\n                    if (!fullUser) {\r\n                        let recievedUser = data.user;\r\n                        console.log(data);\r\n                        user.username = recievedUser.username;\r\n                        user.rating.bulletActualRating = recievedUser.bulletActualRating;\r\n                        user.rating.bulletMaxRating = recievedUser.bulletMaxRating;\r\n                        user.rating.blitzActualRating = recievedUser.blitzActualRating;\r\n                        user.rating.blitzMaxRating = recievedUser.blitzMaxRating;\r\n                        user.rating.rapidActualRating = recievedUser.rapidActualRating;\r\n                        user.rating.rapidMaxRating = recievedUser.rapidMaxRating;\r\n                    }\r\n                    else {\r\n                        user = new LocalUser();\r\n                        let recievedUser = data.user;\r\n                        console.log(data);\r\n                        user.username = recievedUser.username;\r\n                        user.email = recievedUser.email;\r\n                        user.rating.bulletActualRating = recievedUser.bulletActualRating;\r\n                        user.rating.bulletMaxRating = recievedUser.bulletMaxRating;\r\n                        user.rating.blitzActualRating = recievedUser.blitzActualRating;\r\n                        user.rating.blitzMaxRating = recievedUser.blitzMaxRating;\r\n                        user.rating.rapidActualRating = recievedUser.rapidActualRating;\r\n                        user.rating.rapidMaxRating = recievedUser.rapidMaxRating;\r\n                    }\r\n                }\r\n            },\r\n            error: (error) => {\r\n                console.error('There was an error!', error);\r\n            }\r\n        });\r\n        return user;\r\n    }\r\n}\r\nUserService.ɵfac = function UserService_Factory(t) { return new (t || UserService)(i0.ɵɵinject(i1.HttpClient)); };\r\nUserService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: UserService, factory: UserService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}