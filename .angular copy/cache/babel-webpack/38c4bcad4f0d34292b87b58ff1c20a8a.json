{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/pabli/Documents/Bootcamp/chess-tower/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { LocalUser } from '../models/local-user';\nimport { User } from '../models/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.url = \"https://chess-rook-rest-api.herokuapp.com/user\";\n  }\n\n  getFullUser(username) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(\"getting user...\");\n      let user = new LocalUser();\n      yield _this.http.get(_this.url + \"?username=\" + username).subscribe({\n        next: data => {\n          if (!data.failed) {\n            let recievedUser = data.user;\n            console.log(data);\n            user.username = recievedUser.username;\n            user.email = recievedUser.email;\n            user.name = recievedUser.name;\n            user.surname;\n            user.rating.bulletActualRating = recievedUser.bulletActualRating;\n            user.rating.bulletMaxRating = recievedUser.bulletMaxRating;\n            user.rating.blitzActualRating = recievedUser.blitzActualRating;\n            user.rating.blitzMaxRating = recievedUser.blitzMaxRating;\n            user.rating.rapidActualRating = recievedUser.rapidActualRating;\n            user.rating.rapidMaxRating = recievedUser.rapidMaxRating;\n          }\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n      });\n      return user;\n    })();\n  }\n\n  getSimpleUser(username) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(\"getting user...\");\n      let user = new User(); // : new LocalUser();\n\n      yield _this2.http.get(_this2.url + \"?username=\" + username).subscribe({\n        next: data => {\n          if (!data.failed) {\n            let recievedUser = data.user;\n            console.log(data);\n            user.username = recievedUser.username;\n            user.rating.bulletActualRating = recievedUser.bulletActualRating;\n            user.rating.bulletMaxRating = recievedUser.bulletMaxRating;\n            user.rating.blitzActualRating = recievedUser.blitzActualRating;\n            user.rating.blitzMaxRating = recievedUser.blitzMaxRating;\n            user.rating.rapidActualRating = recievedUser.rapidActualRating;\n            user.rating.rapidMaxRating = recievedUser.rapidMaxRating;\n          }\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n      });\n      return user;\n    })();\n  }\n\n  getUser(username, fullUser) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (fullUser) return yield _this3.getFullUser(username);else return yield _this3.getSimpleUser(username);\n    })();\n  }\n\n}\n\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/pabli/Documents/Bootcamp/chess-tower/src/app/shared/user.service.ts"],"names":["LocalUser","User","i0","i1","UserService","constructor","http","url","getFullUser","username","console","log","user","get","subscribe","next","data","failed","recievedUser","email","name","surname","rating","bulletActualRating","bulletMaxRating","blitzActualRating","blitzMaxRating","rapidActualRating","rapidMaxRating","error","getSimpleUser","getUser","fullUser","ɵfac","UserService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { LocalUser } from '../models/local-user';\r\nimport { User } from '../models/user';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class UserService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.url = \"https://chess-rook-rest-api.herokuapp.com/user\";\r\n    }\r\n    async getFullUser(username) {\r\n        console.log(\"getting user...\");\r\n        let user = new LocalUser();\r\n        await this.http.get(this.url + \"?username=\" + username).subscribe({\r\n            next: (data) => {\r\n                if (!data.failed) {\r\n                    let recievedUser = data.user;\r\n                    console.log(data);\r\n                    user.username = recievedUser.username;\r\n                    user.email = recievedUser.email;\r\n                    user.name = recievedUser.name;\r\n                    user.surname;\r\n                    user.rating.bulletActualRating = recievedUser.bulletActualRating;\r\n                    user.rating.bulletMaxRating = recievedUser.bulletMaxRating;\r\n                    user.rating.blitzActualRating = recievedUser.blitzActualRating;\r\n                    user.rating.blitzMaxRating = recievedUser.blitzMaxRating;\r\n                    user.rating.rapidActualRating = recievedUser.rapidActualRating;\r\n                    user.rating.rapidMaxRating = recievedUser.rapidMaxRating;\r\n                }\r\n            },\r\n            error: (error) => {\r\n                console.error('There was an error!', error);\r\n            }\r\n        });\r\n        return user;\r\n    }\r\n    async getSimpleUser(username) {\r\n        console.log(\"getting user...\");\r\n        let user = new User(); // : new LocalUser();\r\n        await this.http.get(this.url + \"?username=\" + username).subscribe({\r\n            next: (data) => {\r\n                if (!data.failed) {\r\n                    let recievedUser = data.user;\r\n                    console.log(data);\r\n                    user.username = recievedUser.username;\r\n                    user.rating.bulletActualRating = recievedUser.bulletActualRating;\r\n                    user.rating.bulletMaxRating = recievedUser.bulletMaxRating;\r\n                    user.rating.blitzActualRating = recievedUser.blitzActualRating;\r\n                    user.rating.blitzMaxRating = recievedUser.blitzMaxRating;\r\n                    user.rating.rapidActualRating = recievedUser.rapidActualRating;\r\n                    user.rating.rapidMaxRating = recievedUser.rapidMaxRating;\r\n                }\r\n            },\r\n            error: (error) => {\r\n                console.error('There was an error!', error);\r\n            }\r\n        });\r\n        return user;\r\n    }\r\n    async getUser(username, fullUser) {\r\n        if (fullUser)\r\n            return await this.getFullUser(username);\r\n        else\r\n            return await this.getSimpleUser(username);\r\n    }\r\n}\r\nUserService.ɵfac = function UserService_Factory(t) { return new (t || UserService)(i0.ɵɵinject(i1.HttpClient)); };\r\nUserService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: UserService, factory: UserService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}